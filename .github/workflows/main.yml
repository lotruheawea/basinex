name: Continuous Integration

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  source_check:
    name: source check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black 'pylint<3' 'isort[colors]<6'

      - name: black check
        run: |
          python -m black --check --diff --color src/

      - name: isort check
        run: |
          python -m isort --check --diff --color src/

  build_sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build --sdist --outdir dist .

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: wheels for ${{ matrix.cfg.os }} / ${{ matrix.cfg.arch }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { os: ubuntu-latest, arch: x86_64 }
        - { os: ubuntu-latest, arch: i686 }
        - { os: windows-latest, arch: AMD64 }
        - { os: windows-latest, arch: x86 }
        - { os: macos-latest, arch: x86_64 }
        - { os: macos-latest, arch: arm64 }
        - { os: macos-latest, arch: universal2 }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS: ${{ matrix.cfg.arch }}
        with:
          output-dir: dist

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  test_wheel:
    name: Test wheel on ${{ matrix.os }} with py ${{ matrix.python-version }}
    needs: [build_wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install gdal-bin libgdal-dev
          python -m pip install --upgrade pip
          pip install wheel
          pip install GDAL==$(gdal-config --version)

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pipwin
          pipwin install gdal

      - name: Install MacOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install gdal
          python -m pip install --upgrade pip
          pip install wheel
          pip install GDAL==$(gdal-config --version)

      - name: Install
        run: |
          pip install --find-links dist/ basinex

      - name: Run tests
        run: |
          basinex -h

  # upload_to_pypi:
  #   needs: [build_wheels, build_sdist, test_wheel]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - name: Publish to Test PyPI
  #       # only if working on main
  #       if: github.ref == 'refs/heads/main'
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.test_pypi_password }}
  #         repository_url: https://test.pypi.org/legacy/
  #         skip_existing: true

  #     - name: Publish to PyPI
  #       # only if tagged
  #       if: startsWith(github.ref, 'refs/tags')
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
